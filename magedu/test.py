# Linux的特殊进程
# 僵尸进程
# 孤儿进程
# 守护进程

# 什么时候使用多线程和多进程？5*
# 对于IO密集型适合使用多线程，因为多线程运行时有4种状态转换，
# 当线程在等待IO时，可以切换线程，调用ready状态的线程直接运行
# 而多进程会因为进程间IO序列化，产生大开销所以不合适；
# 对于cpu密集型，也就是代码中存在大量运算，需要充分利用
# cpu, 而python多线程运行时，因为存在全局解释器锁
# 看似并行的多线程，实际上一次只使用一个cpu并运行一个线程
# 所以想同时利用多个cpu,可以用多进程，实现并行运算。

# 多线程，多进程应用举例
# 比如：WEB中常见的请求/应答模型（这是nginx工作模式）
# 这需要在master中启动多个worker工作进程，一般进程数与cpu数量相同
# 而在每一个工作进程中，往往需要操作网络IO和磁盘IO，属于IO密集型，
# 所以又工作进程中开启多个线程，来实现







